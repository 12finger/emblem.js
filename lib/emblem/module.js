// Generated by CoffeeScript 1.3.3
var Emblem, Parser, Preprocessor, fs, path, pkg;

fs = require('fs');

path = require('path');

Preprocessor = require('./preprocessor').Preprocessor;

Parser = require('./parser');

pkg = require('./../../package.json');

module.exports = {
  Compiler: Compiler,
  Optimiser: Optimiser,
  Parser: Parser,
  Preprocessor: Preprocessor,
  Nodes: Nodes,
  VERSION: pkg.version,
  parse: function(coffee, options) {
    var parsed, preprocessed;
    if (options == null) {
      options = {};
    }
    try {
      preprocessed = Preprocessor.processSync(coffee);
      parsed = Parser.parse(preprocessed, {
        raw: options.raw,
        inputSource: options.inputSource
      });
      if (options.optimise) {
        return Optimiser.optimise(parsed);
      } else {
        return parsed;
      }
    } catch (e) {
      if (!(e instanceof Parser.SyntaxError)) {
        throw e;
      }
      throw new Error("GOT SOME BAD");
    }
  },
  compile: function(csAst, options) {
    return Compiler.compile(csAst, options);
  },
  sourceMap: function(jsAst, name, options) {
    var _ref;
    if (name == null) {
      name = 'unknown';
    }
    if (options == null) {
      options = {};
    }
    if (typeof escodegen === "undefined" || escodegen === null) {
      throw new Error('escodegen not found: run `npm install escodegen`');
    }
    return escodegen.generate(jsAst.toJSON(), {
      comment: !options.compact,
      sourceMap: name,
      format: options.compact ? escodegenCompactDefaults : (_ref = options.format) != null ? _ref : escodegenFormatDefaults
    });
  }
};

Emblem = module.exports.Emblem = module.exports;

require('./run');
